srag_sp2 = rename(srag_sp2, sexo=CS_SEXO, idade= NU_IDADE_N)
#### Procurando Missing Values
sapply(srag_sp2, function(x) sum(is.na(x)))
sapply(srag_sp2, function(x) sum(is.nan(x)))
library(dplyr)
library(rstatix)
library(ggplot2)
library(plotly)
########## Carregando os dados sobre Sindrome Respiratória Aguda Grave ##########
srag_sp = read.csv2("C:/Users/ISAAC/Documents/Analise de Dados com R/Projeto 1/dados-covid-sp-master/data/SRAG_2020.csv", sep=';')
View(srag_sp)
srag_sp2 = select(srag_sp, -c(51:133))
srag_sp2 = select(srag_sp2, -c(5:8))
srag_sp2 = select(srag_sp2, -c(6,8))
glimpse(srag_sp2)
#### Trocando o tipo de dado
srag_sp2$DT_NOTIFIC = as.Date(srag_sp2$DT_NOTIFIC, format="%m/%d/%Y")
glimpse(srag_sp2)
#### Renomeando as colunas
srag_sp2 = rename(srag_sp2, sexo=CS_SEXO, idade= NU_IDADE_N)
#### Procurando Missing Values
sapply(srag_sp2, function(x) sum(is.na(x)))
sapply(srag_sp2, function(x) sum(is.nan(x)))
ggplot(srag_sp2, aes(srag_sp2$sexo))+
geom_bar(fill = "blue") +
labs(title=" Quantidade por sexo", subtitle = "SRAG", x = "Sexo", y= "Quantidade")
ggplot(srag_sp2, aes(x=sexo))+
geom_bar(fill = "blue") +
labs(title=" Quantidade por sexo", subtitle = "SRAG", x = "Sexo", y= "Quantidade")
srag_sp2$CS_RACA[which(is.na(srag_sp2$CS_RACA))] = 9
sapply(srag_sp2, function(x) sum(is.na(x)))
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 1] = "Branca"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 2] = "Preta"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 3] = "Amarela"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 4] = "Parda"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 5] = "Indigena"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 9] = "Ignorado"
ggplot(srag_sp2, aes(x=CS_RACA))+
geom_bar(fill="red")+
labs(title="Quantidade por etnia", subtitle="SRAG", x= "Etnia", y="Quantidade")
library(dplyr)
library(rstatix)
library(ggplot2)
library(plotly)
########## Carregando os dados sobre Sindrome Respiratória Aguda Grave ##########
srag_sp = read.csv2("C:/Users/ISAAC/Documents/Analise de Dados com R/Projeto 1/dados-covid-sp-master/data/SRAG_2020.csv", sep=';')
View(srag_sp)
srag_sp2 = select(srag_sp, -c(51:133))
srag_sp2 = select(srag_sp2, -c(5:8))
srag_sp2 = select(srag_sp2, -c(6,8))
glimpse(srag_sp2)
#### Trocando o tipo de dado
srag_sp2$DT_NOTIFIC = as.Date(srag_sp2$DT_NOTIFIC, format="%m/%d/%Y")
glimpse(srag_sp2)
#### Renomeando as colunas
srag_sp2 = rename(srag_sp2, sexo=CS_SEXO, idade= NU_IDADE_N)
#### Procurando Missing Values
sapply(srag_sp2, function(x) sum(is.na(x)))
sapply(srag_sp2, function(x) sum(is.nan(x)))
#### Análises gráficas ####
ggplot(srag_sp2, aes(x=sexo))+
geom_bar(fill = "blue") +
labs(title=" Quantidade por sexo", subtitle = "SRAG", x = "Sexo", y= "Quantidade")
srag_sp2$CS_RACA[which(is.na(srag_sp2$CS_RACA))] = 9
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 1] = "Branca"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 2] = "Preta"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 3] = "Amarela"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 4] = "Parda"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 5] = "Indigena"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 9] = "Ignorado"
ggplot(srag_sp2, aes(x=CS_RACA))+
geom_bar(fill="red")+
labs(title="Quantidade por etnia", subtitle="SRAG", x= "Etnia", y="Quantidade")
sapply(srag_sp2, function(x) sum(is.na(x)))
srag_sp2$CS_ZONA[which(is.na(srag_sp2$CS_ZONA))] = 9
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 1] = 'Urbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 2] = 'Rural'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 3] = 'Periurbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 9] = 'Ignorado'
library(dplyr)
library(rstatix)
library(ggplot2)
library(plotly)
########## Carregando os dados sobre Sindrome Respiratória Aguda Grave ##########
srag_sp = read.csv2("C:/Users/ISAAC/Documents/Analise de Dados com R/Projeto 1/dados-covid-sp-master/data/SRAG_2020.csv", sep=';')
View(srag_sp)
srag_sp2 = select(srag_sp, -c(51:133))
srag_sp2 = select(srag_sp2, -c(5:8))
srag_sp2 = select(srag_sp2, -c(6,8))
glimpse(srag_sp2)
#### Trocando o tipo de dado
srag_sp2$DT_NOTIFIC = as.Date(srag_sp2$DT_NOTIFIC, format="%m/%d/%Y")
glimpse(srag_sp2)
#### Renomeando as colunas
srag_sp2 = rename(srag_sp2, sexo=CS_SEXO, idade= NU_IDADE_N)
#### Procurando Missing Values
sapply(srag_sp2, function(x) sum(is.na(x)))
sapply(srag_sp2, function(x) sum(is.nan(x)))
#### Análises gráficas ####
ggplot(srag_sp2, aes(x=sexo))+
geom_bar(fill = "blue") +
labs(title=" Quantidade por sexo", subtitle = "SRAG", x = "Sexo", y= "Quantidade")
srag_sp2$CS_RACA[which(is.na(srag_sp2$CS_RACA))] = 9
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 1] = "Branca"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 2] = "Preta"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 3] = "Amarela"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 4] = "Parda"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 5] = "Indigena"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 9] = "Ignorado"
ggplot(srag_sp2, aes(x=CS_RACA))+
geom_bar(fill="red")+
labs(title="Quantidade por etnia", subtitle="SRAG", x= "Etnia", y="Quantidade")
sapply(srag_sp2, function(x) sum(is.na(x)))
srag_sp2$CS_ZONA[which(is.na(srag_sp2$CS_ZONA))] = 9
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 1] = 'Urbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 2] = 'Rural'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 3] = 'Periurbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 9] = 'Ignorado'
sapply(srag_sp2, function(x) sum(is.na(x)))
ggplot(srag_sp2, aes(x=CS_RACA, y=sexo, fill=factor(CS_ZONA))) +
geom_col(position="dodge") +
labs(title='Região por sexo e raça', x="Raça", y= "Sexo", fill="Região")
ggplot(srag_sp2, aes(x=CS_RACA, y=sexo, fill=factor(CS_ZONA))) +
geom_col(position="fill") +
labs(title='Região por sexo e raça', x="Raça", y= "Sexo", fill="Região")
ggplot(srag_sp2, aes(x=CS_RACA, y=sexo, fill=factor(CS_ZONA))) +
geom_col(position="dodge") +
labs(title='Região por sexo e raça', x="Raça", y= "Sexo", fill="Região")
gr = aggregate(idade~sexo + CS_ZONA, data=srag_sp2, FUN=mean)
View(gr)
ggplot(gr, aes(x= CS_ZONA, y=idade, fill=factor(sexo))) +
geom_col(position="stack")
View(gr)
?aggregate
ggplot(gr, aes(x= CS_ZONA, y=idade, fill=factor(sexo))) +
geom_col(position="dodge")
ggplot(gr, aes(x= CS_ZONA, y=idade, fill=factor(sexo))) +
geom_col(position="stack")
srag_sp2%>%plot_ly(x = ~CS_RACA) %>%
layout(xaxis= list(title="Raça"), yaxis=list(title="Quantidade"))
library(dplyr)
library(rstatix)
library(ggplot2)
library(plotly)
########## Carregando os dados sobre Sindrome Respiratória Aguda Grave ##########
srag_sp = read.csv2("C:/Users/ISAAC/Documents/Analise de Dados com R/Projeto 1/dados-covid-sp-master/data/SRAG_2020.csv", sep=';')
View(srag_sp)
srag_sp2 = select(srag_sp, -c(51:133))
srag_sp2 = select(srag_sp2, -c(5:8))
srag_sp2 = select(srag_sp2, -c(6,8))
glimpse(srag_sp2)
#### Trocando o tipo de dado
srag_sp2$DT_NOTIFIC = as.Date(srag_sp2$DT_NOTIFIC, format="%m/%d/%Y")
glimpse(srag_sp2)
#### Renomeando as colunas
srag_sp2 = rename(srag_sp2, sexo=CS_SEXO, idade= NU_IDADE_N)
#### Procurando Missing Values
sapply(srag_sp2, function(x) sum(is.na(x)))
sapply(srag_sp2, function(x) sum(is.nan(x)))
#### Análises gráficas ####
ggplot(srag_sp2, aes(x=sexo))+
geom_bar(fill = "blue") +
labs(title=" Quantidade por sexo", subtitle = "SRAG", x = "Sexo", y= "Quantidade")
srag_sp2$CS_RACA[which(is.na(srag_sp2$CS_RACA))] = 9
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 1] = "Branca"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 2] = "Preta"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 3] = "Amarela"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 4] = "Parda"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 5] = "Indigena"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 9] = "Ignorado"
ggplot(srag_sp2, aes(x=CS_RACA))+
geom_bar(fill="red")+
labs(title="Quantidade por etnia", subtitle="SRAG", x= "Etnia", y="Quantidade")
sapply(srag_sp2, function(x) sum(is.na(x)))
srag_sp2$CS_ZONA[which(is.na(srag_sp2$CS_ZONA))] = 9
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 1] = 'Urbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 2] = 'Rural'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 3] = 'Periurbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 9] = 'Ignorado'
ggplot(srag_sp2, aes(x=CS_RACA, y=sexo, fill=factor(CS_ZONA))) +
geom_col(position="dodge") +
labs(title='Região por sexo e raça', x="Raça", y= "Sexo", fill="Região")
gr = aggregate(idade ~ sexo + CS_ZONA, data = srag_sp2, FUN = mean)
?aggregate
ggplot(gr, aes(x= CS_ZONA, y=idade, fill=factor(sexo))) +
geom_col(position="stack")
srag_sp2%>%plot_ly(x = ~CS_RACA) %>%
layout(xaxis= list(title="Raça"), yaxis=list(title="Quantidade"))
ggplot(srag_sp2, aes(x=sexo))+
geom_bar(fill = "blue") +
labs(title=" Quantidade por sexo", subtitle = "SRAG", x = "Sexo", y= "Quantidade")
ggplot(srag_sp2, aes(x=CS_RACA))+
geom_bar(fill="red")+
labs(title="Quantidade por etnia", subtitle="SRAG", x= "Etnia", y="Quantidade")
ggplot(srag_sp2, aes(x=CS_RACA, y=sexo, fill=factor(CS_ZONA))) +
geom_col(position="dodge") +
labs(title='Região por sexo e raça', x="Raça", y= "Sexo", fill="Região")
ggplot(srag_sp2, aes(x=CS_RACA, y=sexo, fill=factor(CS_ZONA))) +
geom_col(position="dodge") +
labs(title='Região por sexo e raça', x="Raça", y= "Sexo", fill="Região")
srag_sp = read.csv2("C:/Users/ISAAC/Documents/Analise de Dados com R/Projeto 1/dados-covid-sp-master/data/SRAG_2020.csv", sep=';')
View(srag_sp)
srag_sp2 = select(srag_sp, -c(51:133))
srag_sp2 = select(srag_sp2, -c(5:8))
srag_sp2 = select(srag_sp2, -c(6,8))
glimpse(srag_sp2)
#### Trocando o tipo de dado
srag_sp2$DT_NOTIFIC = as.Date(srag_sp2$DT_NOTIFIC, format="%m/%d/%Y")
glimpse(srag_sp2)
#### Renomeando as colunas
srag_sp2 = rename(srag_sp2, sexo=CS_SEXO, idade= NU_IDADE_N)
#### Procurando Missing Values
sapply(srag_sp2, function(x) sum(is.na(x)))
sapply(srag_sp2, function(x) sum(is.nan(x)))
#### Análises gráficas ####
ggplot(srag_sp2, aes(x=sexo))+
geom_bar(fill = "blue") +
labs(title=" Quantidade por sexo", subtitle = "SRAG", x = "Sexo", y= "Quantidade")
srag_sp2$CS_RACA[which(is.na(srag_sp2$CS_RACA))] = 9
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 1] = "Branca"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 2] = "Preta"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 3] = "Amarela"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 4] = "Parda"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 5] = "Indigena"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 9] = "Ignorado"
ggplot(srag_sp2, aes(x=CS_RACA))+
geom_bar(fill="red")+
labs(title="Quantidade por etnia", subtitle="SRAG", x= "Etnia", y="Quantidade")
sapply(srag_sp2, function(x) sum(is.na(x)))
srag_sp2$CS_ZONA[which(is.na(srag_sp2$CS_ZONA))] = 9
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 1] = 'Urbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 2] = 'Rural'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 3] = 'Periurbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 9] = 'Ignorado'
ggplot(srag_sp2, aes(x=CS_RACA, y=sexo, fill=factor(CS_ZONA))) +
geom_col(position="dodge") +
labs(title='Região por sexo e raça', x="Raça", y= "Sexo", fill="Região")
gr = aggregate(idade ~ sexo + CS_ZONA, data = srag_sp2, FUN = mean)
?aggregate
ggplot(gr, aes(x= CS_ZONA, y=idade, fill=factor(sexo))) +
geom_col(position="stack")
srag_sp2%>%plot_ly(x = ~CS_RACA) %>%
layout(xaxis= list(title="Raça"), yaxis=list(title="Quantidade"))
srag_sp2$idade[srag_sp2$TP_IDADE == 2] = 0
srag_sp2$idade[srag_sp2$TP_IDADE == 1] = 0
summary(srag_sp2$idade)
boxplot(srag_sp2$idade)
srag_sp2%>% identify_outliers(idade)
outliers = c(boxplot.stats(srag_sp2$idade)$out)
srag_final = srag_sp2[-c(which(srag_sp2$idade %in% outliers)), ]
boxplot(srag_final$idade)
srag_sp2 %>% filter(!is.na(idade)) %>%
ggplot(aes(x= '', y= idade)) +
geom_boxplot(width = .3, outlier.color = "purple")
plot_ly(srag_sp2, y=srag_final$idade,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='Idade'))
plot_ly(srag_sp2, x = ~CS_RACA) %>%
layout(xaxis= list(title="Raça"), yaxis=list(title="Quantidade"))
plot_ly(srag_sp2, x = ~CS_RACA) %>%
layout(xaxis= list(title="Raça"), yaxis=list(title="Quantidade"))
plot_ly(srag_sp2, x = ~CS_RACA) %>%
layout(xaxis= list(title="Raça"), yaxis=list(title="Quantidade"))
plot_ly(srag_sp2, y=srag_final$idade,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='Idade'))
plot_ly(srag_sp2, y=srag_sp2$idade,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='Idade'))
library(dplyr)
library(rstatix)
library(ggplot2)
library(plotly)
########## Carregando os dados sobre Sindrome Respiratória Aguda Grave ##########
srag_sp = read.csv2("C:/Users/ISAAC/Documents/Analise de Dados com R/Projeto 1/dados-covid-sp-master/data/SRAG_2020.csv", sep=';')
View(srag_sp)
srag_sp2 = select(srag_sp, -c(51:133))
srag_sp2 = select(srag_sp2, -c(5:8))
srag_sp2 = select(srag_sp2, -c(6,8))
glimpse(srag_sp2)
#### Trocando o tipo de dado
srag_sp2$DT_NOTIFIC = as.Date(srag_sp2$DT_NOTIFIC, format="%m/%d/%Y")
glimpse(srag_sp2)
#### Renomeando as colunas
srag_sp2 = rename(srag_sp2, sexo=CS_SEXO, idade= NU_IDADE_N)
#### Procurando Missing Values
sapply(srag_sp2, function(x) sum(is.na(x)))
sapply(srag_sp2, function(x) sum(is.nan(x)))
#### Análises gráficas ####
ggplot(srag_sp2, aes(x=sexo))+
geom_bar(fill = "blue") +
labs(title=" Quantidade por sexo", subtitle = "SRAG", x = "Sexo", y= "Quantidade")
srag_sp2$CS_RACA[which(is.na(srag_sp2$CS_RACA))] = 9
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 1] = "Branca"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 2] = "Preta"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 3] = "Amarela"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 4] = "Parda"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 5] = "Indigena"
srag_sp2$CS_RACA[srag_sp2$CS_RACA == 9] = "Ignorado"
ggplot(srag_sp2, aes(x=CS_RACA))+
geom_bar(fill="red")+
labs(title="Quantidade por etnia", subtitle="SRAG", x= "Etnia", y="Quantidade")
sapply(srag_sp2, function(x) sum(is.na(x)))
srag_sp2$CS_ZONA[which(is.na(srag_sp2$CS_ZONA))] = 9
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 1] = 'Urbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 2] = 'Rural'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 3] = 'Periurbana'
srag_sp2$CS_ZONA[srag_sp2$CS_ZONA == 9] = 'Ignorado'
ggplot(srag_sp2, aes(x=CS_RACA, y=sexo, fill=factor(CS_ZONA))) +
geom_col(position="dodge") +
labs(title='Região por sexo e raça', x="Raça", y= "Sexo", fill="Região")
gr = aggregate(idade ~ sexo + CS_ZONA, data = srag_sp2, FUN = mean)
?aggregate
ggplot(gr, aes(x= CS_ZONA, y=idade, fill=factor(sexo))) +
geom_col(position="stack")
plot_ly(srag_sp2, x = ~CS_RACA) %>%
layout(xaxis= list(title="Raça"), yaxis=list(title="Quantidade"))
srag_sp2$idade[srag_sp2$TP_IDADE == 2] = 0
srag_sp2$idade[srag_sp2$TP_IDADE == 1] = 0
summary(srag_sp2$idade)
boxplot(srag_sp2$idade)
srag_sp2%>% identify_outliers(idade)
outliers = c(boxplot.stats(srag_sp2$idade)$out)
srag_final = srag_sp2[-c(which(srag_sp2$idade %in% outliers)), ]
boxplot(srag_final$idade)
srag_sp2 %>% filter(!is.na(idade)) %>%
ggplot(aes(x= '', y= idade)) +
geom_boxplot(width = .3, outlier.color = "purple")
plot_ly(srag_sp2, y=srag_sp2$idade,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='Idade'))
ggplot(srag_final, aes(x= factor(sexo), y= idade)) +
geom_boxplot(fill = "dodgerblue")+
labs(y="sexo",
x="Idade" ,
title="Distribuição das idades por sexo")
plot_ly(srag_final, y=srag_final$idade, color=srag_final$sexo,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", xaxis=list(title="Sexo"), yaxis = list(title='Idade'))
sal_solteiro = c(4.0, 5.73, 6.26, 6.86, 7.39, 7.44, 8.46,
8.74, 9.35, 10.53, 10.76, 11.59, 12.0, 13.85, 16.22, 18.75)
sal_casado = c(4.56, 5.25, 6.66, 7.59, 8.12, 8.95, 9.13, 9.77, 9.80, 11.06, 12.79, 13.23,
13.60, 14.69, 14.71, 15.99, 16.61, 17.26, 19.40, 23.30)
mean(sal_solteiro)
mean(sal_casado)
median(sal_solteiro)
median(sal_casado)
sd(sal_solteiro)
sd(sal_casado)
summary(sal_solteiro)
sumary(sal_casado)
summary(sal_casado)
estado_civil = c("solteiro", "casado", "casado", "solteiro", "solteiro", "casado", "solteiro", "solteiro",
"casado", "solteiro", "casado", "solteiro", "solteiro", "casado", "casado", "solteiro", "casado",
"casado", "solteiro", "solteiro", "casado", "solteiro", "solteiro", "casado", "casado",
"casado", "solteiro", "casado", "casado", "casado", "solteiro", "casado", "casado", "solteiro", "casado", "casado")
salarios = c(4.0, 4.56, 5.25, 5.73, 6.26, 6.66, 6.86, 7.39, 7.59, 7.44, 8.12, 8.46, 8.74, 8.95, 9.13,
9.35, 9.77, 9.80, 10.53, 10.76, 11.06, 11.59, 12.0, 12.79, 13.23, 13.60, 13.85, 14.69, 14.71,
15.99, 16.22, 16.61, 17.26, 18.75, 19.40, 23.30)
df = data.frame(c(estado_civil, salarios))
View(df)
df = data.frame(colunas=c(estado_civil, salarios))
df = data.frame(civil = estado_civil, sal=salarios)
View(df)
mean(df$salario[df$civil == "solteiro"])
df$salario[df$civil == "solteiro"]
df$salario[which(df$civil == "solteiro")]
df$salario[which(df$civil == "solteiro"), ]
df$salario[,which(df$civil == "solteiro")]
solteiros = df$salario[,which(df$civil == "solteiro")]
solteiros = df[which(df$civil == "solteiro"),]
View(solteiros)
casados = df[which(df%civil == 'casado'), ]
casados = df[which(df%civil == 'casado'),]
casados = df[which(df$civil == 'casado'),]
summary(solteiros$sal)
summary(casados$sal)
boxplot(df$sal, df$civil)
boxplot(solteiros$sal)
boxplot(casados$sal)
?boxplot
plot_ly(df, y=srag_sp2$civil,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='Idade'))
plot_ly(df, y=srag_sp2$civil,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='Idade'))
library(plotly)
plot_ly(df, y=srag_sp2$civil,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='Idade'))
plot_ly(df, y=df$salario,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='salario'))
plot_ly(df, y=df$s,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='salario'))
plot_ly(df, y=df$sal,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='sal'))
plot_ly(solteiros y=solteiros$sal,
plot_ly(solteiros, y=solteiros$sal,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='sal'))
summary(solteiros$sal)
plot_ly(solteiros, y=solteiros$sal,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='sal'))
plot_ly(solteiros, y=solteiros$sal,
type = 'box')%>%
layout(title="BOXPLOT POR IDADE", yaxis = list(title='sal'))
plot_ly(casados, y=casados$sal,
type = 'box')%>%
layout(title="BOXPLOT POR CASADOS", yaxis = list(title='sal'))
q3 = data.frame(rownames = c("sim", 'não'), SP=c(50, 150), CAM=c(65, 185), RP=c(105, 195), SAN =c(120, 180))
View(q3)
q3 = data.frame(rownames =("sim", 'não'), SP=c(50, 150), CAM=c(65, 185), RP=c(105, 195), SAN =c(120, 180))
q3 = data.frame(row.names = c("sim", 'não'), SP=c(50, 150), CAM=c(65, 185), RP=c(105, 195), SAN =c(120, 180))
chisq.test(q3)
summary(solteiros$sal)
#Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#4.000   7.258   9.045   9.871  11.693  18.750
summary(casados$sal)
sd(solteiros$sal)
sd(casados$sal)
quantilie(solteiros$sal, 0.75)
quantile(solteiros$sal, 0.75)
## QUESTAO 4
setor_primarario = c(2.0, 2.5, 2.9, 3.3, 4.1, 4.3, 7.0, 13.0)
analfabetismo = c(17.5, 18.5, 19.5, 22.2, 26.5, 16.6, 36.6, 38.4)
plot(setor_primarario, analfabetismo)
cor(setor_primarario, analfabetismo)
#item d)
setor_primarario = c(2.0, 2.5, 2.9, 3.3, 4.3, 7.0, 13.0)
analfabetismo = c(17.5, 18.5, 19.5, 22.2, 26.5, 36.6, 38.4)
cor(setor_primarario, analfabetismo)
#item d)
setor_primarario = c(2.0, 2.5, 2.9, 3.3, 4.1, 7.0, 13.0)
analfabetismo = c(17.5, 18.5, 19.5, 22.2, 26.5, 36.6, 38.4)
cor(setor_primarario, analfabetismo)
mean(df[which(df$civil == "solteiro"),]$sal)
mean(df$sal[which(df$civil == "solteiro"),])
mean(df$sal[df$civil == "solteiro"])
plot(cars)
setwd("C:/Users/ISAAC/Documents/Práticas Análises de dados/HousePricingR")
library(dplyr)
library(tidyr)
library(rstatix)
library(dplyr)
library(tidyr)
if(!require(rstatix)) install.packages("rstatix")
library(rstatix)
houseprice = read.csv2('train.csv', sep=';')
View(houseprice)
houseprice = read.csv2('train.csv', sep=',')
View(houseprice)
head(houseprice)
summary(data)
summary(household)
glimpse(household)
glimpse(houseprice)
ggplot(houseprice, aes(x= GrLivArea, y= SalePrice)) +
geom_point()
library(dplyr)
library(tidyr)
if(!require(rstatix)) install.packages("rstatix")
library(rstatix)
if(!require(rstatix)) install.packages("ggplot2")
library(ggplot2)
ggplot(houseprice, aes(x= GrLivArea, y= SalePrice)) +
geom_point()
ggplot(houseprice, aes(x= GrLivArea, y= SalePrice)) +
geom_point() +
labs(x = "Area Habitável (feet²)", y= "Preco de Venda", title="Relação entre área habitável e preço de venda") +
geom_smooth(method = "lm", se = FALSE, color = "blue")
## Conversão de medidas para metros quadrados
conversion_factor = 0.092903
data$GrLivArea <- data$GrLivArea * conversion_factor
## Conversão de medidas para metros quadrados
conversion_factor = 0.092903
houseprice$GrLivArea <- houseprice$GrLivArea * conversion_factor
houseprice$LotArea <- houseprice$LotArea * conversion_factor
ggplot(houseprice, aes(x= GrLivArea, y= SalePrice)) +
geom_point() +
labs(x = "Area Habitável (feet²)", y= "Preco de Venda", title="Relação entre área habitável e preço de venda") +
geom_smooth(method = "lm", se = FALSE, color = "blue")
ggplot(houseprice, aes(x = factor(BedroomAbvGr))) +
geom_bar()
ggplot(houseprice, aes(x = factor(BedroomAbvGr))) +
geom_bar(fill = "blue", color = "black") +
labs(x = "Número de Quartos", y = "Contagem de Casas", title = "Distribuição de Casas por Número de Quartos") +
theme_minimal()
sapply(houseprice, function(x) sum(is.na(x)))
sapply(houseprice, function(x) sum(is.nan(x)))
sapply(houseprice, function(x) sum(is.na(x)))
sapply(houseprice, function(x) sum(is.nan(x)))
ggplot(houseprice, aes(x= GrLivArea, y= SalePrice)) +
geom_point() +
labs(x = "Area Habitável (feet²)", y= "Preco de Venda", title="Relação entre área habitável e preço de venda") +
geom_smooth(method = "lm", se = FALSE, color = "blue")
ggplot(houseprice, aes(x = factor(BedroomAbvGr))) +
geom_bar(fill = "blue", color = "black") +
labs(x = "Número de Quartos", y = "Contagem de Casas", title = "Distribuição de Casas por Número de Quartos") +
theme_minimal()
ggplot(houseprice, aes(x = Street, y = SalePrice)) +
geom_boxplot(fill = "lightblue", color = "blue") +
labs(x = "Tipo de Rua", y = "Preço de Venda", title = "Distribuição de Preços por tipo de rua")
ggplot(houseprice, aes(x = Street, y = SalePrice)) +
geom_boxplot(fill = "lightblue", color = "blue") +
labs(x = "Tipo de Rua", y = "Preço de Venda", title = "Distribuição de Preços por tipo de rua") +
theme_minimal() +
scale_y_continuous(labels= scales::comma)
